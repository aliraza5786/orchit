import{aP as s}from"./index-DXbJhmZM.js";const l=s("workspace",{state:()=>({showSettingPanel:!1,showCreateLaneModal:!1,showCreateLaneModalWithAI:!1,showUpdateLaneModal:!1,background:"var(--bg-body)",showProfilePanel:!1,menuStyle:"classic",showFilter:!1,selectedLaneIds:[]}),actions:{toggleSettingPanel(){this.showProfilePanel=!1,setTimeout(()=>{this.showSettingPanel=!this.showSettingPanel},200)},toggleAllLane(e){this.selectedLaneIds=[],console.log(">>>",this.selectedLaneIds,e)},setSettingPanel(e){this.showProfilePanel=!1,setTimeout(()=>{this.showSettingPanel=e},200)},toggleCreateLaneModal(){this.showCreateLaneModal=!this.showCreateLaneModal},toggleUpdateLaneModal(){this.showUpdateLaneModal=!this.showUpdateLaneModal},toggleCreateLaneModalWithAI(){this.showCreateLaneModalWithAI=!this.showCreateLaneModalWithAI},setBackground(e){this.background=e},setMenuType(e){this.menuStyle=e},toggleProfilePanel(){this.showSettingPanel=!1,setTimeout(()=>{this.showProfilePanel=!this.showProfilePanel},200)},toggleFilter(){this.showFilter=!this.showFilter},toggleLane(e){const t=this.selectedLaneIds.indexOf(e);t===-1?this.selectedLaneIds.push(e):this.selectedLaneIds.splice(t,1)},isLaneSelected(e){return this.selectedLaneIds.includes(e)}}});export{l as u};
